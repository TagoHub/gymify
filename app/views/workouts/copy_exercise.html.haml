.title
  %h1= @workout.name
  - if current_user.programs.include?(@program)
    = link_to exercise_templates_path(), class: "btn btn-outline-primary btn-sm", target: "_blank" do
      %i.bi.bi-book.h5
    = link_to new_program_workout_exercise_path(@program, @workout), class: "btn btn-outline-primary btn-sm" do
      %i.bi.bi-pencil.h5

.form
  = form_with model: [@program, @workout], local: true do |f|
    .form-group
      = label_tag :muscle_group_id, "Muscle Group"
      = select_tag :muscle_group_id,
          options_from_collection_for_select(@muscle_groups, :id, :name),
          prompt: "Choose Muscle Group",
          class: "form-control",
          id: "muscle-group-select"

    .form-group
      = f.label :exercise_ids, "Exercises"
      = f.select :exercise_ids,
          options_from_collection_for_select(@template_exercises, :id, :name, @workout.exercise_ids),
          { include_blank: false },
          multiple: true,
          id: "exercise-select"

    = f.submit 'Save Workout', class: 'btn btn-primary'

:javascript
  const allExercises = #{raw(
    @template_exercises.map { |ex|
      {
        id: ex.id,
        name: ex.name,
        muscle_group_id: ex.primary_muscle_group_id
      }
    }.to_json
  )};

  document.addEventListener("DOMContentLoaded", () => {
    const tom = new TomSelect("#exercise-select", {
      plugins: ['remove_button'],
      maxItems: null,
      searchField: "name",
      valueField: "id",
      labelField: "name",
      options: allExercises
    });

    const muscleSelect = document.getElementById("muscle-group-select");
    muscleSelect.addEventListener("change", (event) => {
      const muscleGroupId = parseInt(event.target.value);
      tom.clearOptions();
      if (!isNaN(muscleGroupId)) {
        const filtered = allExercises.filter(ex => ex.muscle_group_id === muscleGroupId);
        tom.addOptions(filtered);
      } else {
        tom.addOptions(allExercises);
      }
      tom.refreshOptions(false);
    });
  });
