c!
c
body_weight
c!
n
load
c
load
c
n
to_unit
from_unit
load
c
load
c
get_load(70.0, unit, unit)
get_load(70, unit, unit)
unit
exercise.instrument.unit
exercise.instrument.weight
get_load(exercise.instrument.weight, exercise.instrument.unit, unit)
get_load(70.0, Unit.find_by(name: "Kilograms"), unit)
get_load(70, Unit.find_by(name: "Kilograms"), unit)
body_weight
c
exercise
exercise.body_weight
body_weight
c
body_weight
c
body_weight
c
to_unit
from_unit
load
c
load.zero?
load
c
to_unit
from_unit
load
c
exercise.exercise_group
exercise_group
exercise
self.last_set?
self.is_last_set?
self
exercise.exercise_group
exercise
index
c
index
all_sets.pluck(:id)
all_sets.pluck(:order)
all_sets
c
@exercise_set.next_set
@exercise_set
c
@exercise_set.last_set? && @prev_set.last_set?
@prev_set
c
@prev_set
@exercise_set.next_set.exercise
@exercise_set.next_set
@exercise_set.next_set.exercise
@exercise_set.next_set
@exercise_set.next_exercise
@exercise_set.exercise
@exercise_set
@exercise_set.next_exercise
@exercise_set.next_set.order
@exercise_set.next_set
@exercise_set.last_set?
@exercise
c
ex_set
ex_set.intensity_technique
c
!!ex_set.intensity_technique
c
!!ex_set.intensity_technique
ex_set.intensity_technique
ex_set
c
C
["play_set", "start_workout", "set_play_form"].include?(controller.action_name)
controller.action_name
c
controller.action_name
c
controller.action_name
c
controller.action_name
